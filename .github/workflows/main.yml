name: REACT-E-MART

on:
  push:
    branches: [ "main" ]
    

jobs:
  build:

    runs-on: ubuntu-latest

    steps: 
    - name: Checkout repository 
      uses: actions/checkout@v2 
      
    - name: Set up Node.js 
      uses: actions/setup-node@v2 
      with:
        node-version: '16' # specify your Node.js version 
        
    - name: Install dependencies 
      run: npm install 
      
    - name: Build project 
      run: npm run build # or your specific build command


    - name: List build directory (Optional for debug)
      run: ls -al dist

    - run: tar -czf build.tar.gz dist

    - name: Upload build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: build-artifact
        path: build.tar.gz



    - name: Install AWS CLI
      run: sudo apt-get install -y awscli


    - name: Upload artifacts to S3
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ap-south-1
      run: |
        aws s3 cp build.tar.gz s3://my-project-bucket-1993/react-e-mart/build.tar.gz

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout Repo
      uses: actions/checkout@v4

    - name: Download build artifact
      uses: actions/download-artifact@v4
      with:
        path: dist/

    - name: Deploy into Codedeploy
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
        S3_BUCKET: ${{ secrets.S3_BUCKET }}
        CODEDEPLOY_APPLICATION: ${{ secrets.CODEDEPLOY_APPLICATION }}
        CODEDEPLOY_DEPLOYMENT_GROUP: ${{ secrets.CODEDEPLOY_DEPLOYMENT_GROUP }}

      
      run: |
        aws deploy create-deployment \
          --application-name ${{ secrets.CODEDEPLOY_APPLICATION }} \
          --deployment-group-name ${{ secrets.CODEDEPLOY_DEPLOYMENT_GROUP }} \
          --s3-location bucket=${{ secrets.S3_BUCKET }},key=react-e-mart/build.tar.gz,bundleType=tgz
